// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.Data.Context;

#nullable disable

namespace MyApp.Data.Migrations
{
    [DbContext(typeof(SQLContext))]
    [Migration("20230731160441_CRIAÇÃO TABELAS NEGOCIO 123")]
    partial class CRIAÇÃOTABELASNEGOCIO123
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyApp.Domain.Entities.CustomerMovement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MovementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovementTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionTypeId")
                        .IsUnique()
                        .HasFilter("[TransactionTypeId] IS NOT NULL");

                    b.ToTable("CustomerMovements");
                });

            modelBuilder.Entity("MyApp.Domain.Entities.TransactionType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("MyApp.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyApp.Domain.Entities.CustomerMovement", b =>
                {
                    b.HasOne("MyApp.Domain.Entities.TransactionType", "TransactionType")
                        .WithOne("CustomerMovement")
                        .HasForeignKey("MyApp.Domain.Entities.CustomerMovement", "TransactionTypeId");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("MyApp.Domain.Entities.TransactionType", b =>
                {
                    b.Navigation("CustomerMovement");
                });
#pragma warning restore 612, 618
        }
    }
}
