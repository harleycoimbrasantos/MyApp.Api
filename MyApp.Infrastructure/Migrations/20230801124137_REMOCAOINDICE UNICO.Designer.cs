// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.Data.Context;

#nullable disable

namespace MyApp.Data.Migrations
{
    [DbContext(typeof(SQLContext))]
    [Migration("20230801124137_REMOCAOINDICE UNICO")]
    partial class REMOCAOINDICEUNICO
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyApp.Domain.Entities.CustomerMovement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MovementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovementTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("CustomerMovements");
                });

            modelBuilder.Entity("MyApp.Domain.Entities.TransactionType", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Débito",
                            Nature = "Entrada",
                            Signal = "+"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Boleto",
                            Nature = "Saída",
                            Signal = "-"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Financiamento",
                            Nature = "Saída",
                            Signal = "-"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Crédito",
                            Nature = "Entrada",
                            Signal = "+"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Recebimento Empréstimo",
                            Nature = "Entrada",
                            Signal = "+"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Vendas",
                            Nature = "Entrada",
                            Signal = "+"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Recebimento TED",
                            Nature = "Entrada",
                            Signal = "+"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Recebimento DOC",
                            Nature = "Entrada",
                            Signal = "+"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Aluguel",
                            Nature = "Saída",
                            Signal = "-"
                        });
                });

            modelBuilder.Entity("MyApp.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyApp.Domain.Entities.CustomerMovement", b =>
                {
                    b.HasOne("MyApp.Domain.Entities.TransactionType", "TransactionType")
                        .WithMany("CustomerMovement")
                        .HasForeignKey("TransactionTypeId");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("MyApp.Domain.Entities.TransactionType", b =>
                {
                    b.Navigation("CustomerMovement");
                });
#pragma warning restore 612, 618
        }
    }
}
